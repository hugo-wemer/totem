"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const corsConfig = {
    enabled: false,
    origin: true,
    methods: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE'],
    headers: true,
    exposeHeaders: [
        'cache-control',
        'content-language',
        'content-type',
        'expires',
        'last-modified',
        'pragma'
    ],
    credentials: true,
    maxAge: 90
};
exports.default = corsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxNQUFNLFVBQVUsR0FBZTtJQWE3QixPQUFPLEVBQUUsS0FBSztJQXdCZCxNQUFNLEVBQUUsSUFBSTtJQWFaLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUM7SUFtQmpELE9BQU8sRUFBRSxJQUFJO0lBc0JiLGFBQWEsRUFBRTtRQUNiLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIsY0FBYztRQUNkLFNBQVM7UUFDVCxlQUFlO1FBQ2YsUUFBUTtLQUNUO0lBYUQsV0FBVyxFQUFFLElBQUk7SUFXakIsTUFBTSxFQUFFLEVBQUU7Q0FDWCxDQUFBO0FBRUQsa0JBQWUsVUFBVSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb25maWcgc291cmNlOiBodHRwczovL2dpdC5pby9KZmVmQ1xuICpcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcbiAqIGZpbGUuXG4gKi9cblxuaW1wb3J0IHsgQ29yc0NvbmZpZyB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvQ29ycydcblxuY29uc3QgY29yc0NvbmZpZzogQ29yc0NvbmZpZyA9IHtcbiAgLypcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHwgRW5hYmxlZFxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IEEgYm9vbGVhbiB0byBlbmFibGUgb3IgZGlzYWJsZSBDT1JTIGludGVncmF0aW9uIGZyb20geW91ciBBZG9uaXNKc1xuICB8IGFwcGxpY2F0aW9uLlxuICB8XG4gIHwgU2V0dGluZyB0aGUgdmFsdWUgdG8gYHRydWVgIHdpbGwgZW5hYmxlIHRoZSBDT1JTIGZvciBhbGwgSFRUUCByZXF1ZXN0LiBIb3dldmVyLFxuICB8IHlvdSBjYW4gZGVmaW5lIGEgZnVuY3Rpb24gdG8gZW5hYmxlL2Rpc2FibGUgaXQgb24gcGVyIHJlcXVlc3QgYmFzaXMgYXMgd2VsbC5cbiAgfFxuICAqL1xuICBlbmFibGVkOiBmYWxzZSxcblxuICAvLyBZb3UgY2FuIGFsc28gdXNlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm4gdHJ1ZSBvciBmYWxzZS5cbiAgLy8gZW5hYmxlZDogKHJlcXVlc3QpID0+IHJlcXVlc3QudXJsKCkuc3RhcnRzV2l0aCgnL2FwaScpXG5cbiAgLypcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHwgT3JpZ2luXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgU2V0IGEgbGlzdCBvZiBvcmlnaW5zIHRvIGJlIGFsbG93ZWQgZm9yIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5gLlxuICB8IFRoZSB2YWx1ZSBjYW4gYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6XG4gIHxcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXG4gIHxcbiAgfCBCb29sZWFuICh0cnVlKSAgICAtIEFsbG93IGN1cnJlbnQgcmVxdWVzdCBvcmlnaW4uXG4gIHwgQm9vbGVhbiAoZmFsc2UpICAgLSBEaXNhbGxvdyBhbGwuXG4gIHwgU3RyaW5nICAgICAgICAgICAgLSBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBhbGxvd2VkIG9yaWdpbnMuXG4gIHwgQXJyYXkgICAgICAgICAgICAgLSBBbiBhcnJheSBvZiBhbGxvd2VkIG9yaWdpbnMuXG4gIHwgU3RyaW5nICgqKSAgICAgICAgLSBBIHdpbGRjYXJkICgqKSB0byBhbGxvdyBhbGwgcmVxdWVzdCBvcmlnaW5zLlxuICB8IEZ1bmN0aW9uICAgICAgICAgIC0gUmVjZWl2ZXMgdGhlIGN1cnJlbnQgb3JpZ2luIHN0cmluZyBhbmQgc2hvdWxkIHJldHVyblxuICB8ICAgICAgICAgICAgICAgICAgICAgb25lIG9mIHRoZSBhYm92ZSB2YWx1ZXMuXG4gIHxcbiAgKi9cbiAgb3JpZ2luOiB0cnVlLFxuICAvKiBvcmlnaW46ICdodHRwOi8vMTkyLjE2OC40LjEwMjozMDAwJywgKi9cblxuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBNZXRob2RzXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgQW4gYXJyYXkgb2YgYWxsb3dlZCBIVFRQIG1ldGhvZHMgZm9yIENPUlMuIFRoZSBgQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2RgXG4gIHwgaXMgY2hlY2tlZCBhZ2FpbnN0IHRoZSBmb2xsb3dpbmcgbGlzdC5cbiAgfFxuICB8IEZvbGxvd2luZyBpcyB0aGUgbGlzdCBvZiBkZWZhdWx0IG1ldGhvZHMuIEZlZWwgZnJlZSB0byBhZGQgbW9yZS5cbiAgKi9cbiAgbWV0aG9kczogWydHRVQnLCAnSEVBRCcsICdQT1NUJywgJ1BVVCcsICdERUxFVEUnXSxcblxuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBIZWFkZXJzXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgTGlzdCBvZiBoZWFkZXJzIHRvIGJlIGFsbG93ZWQgZm9yIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzYCBoZWFkZXIuXG4gIHwgVGhlIHZhbHVlIGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzpcbiAgfFxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnNcbiAgfFxuICB8IEJvb2xlYW4odHJ1ZSkgICAgIC0gQWxsb3cgYWxsIGhlYWRlcnMgbWVudGlvbmVkIGluIGBBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnNgLlxuICB8IEJvb2xlYW4oZmFsc2UpICAgIC0gRGlzYWxsb3cgYWxsIGhlYWRlcnMuXG4gIHwgU3RyaW5nICAgICAgICAgICAgLSBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBhbGxvd2VkIGhlYWRlcnMuXG4gIHwgQXJyYXkgICAgICAgICAgICAgLSBBbiBhcnJheSBvZiBhbGxvd2VkIGhlYWRlcnMuXG4gIHwgRnVuY3Rpb24gICAgICAgICAgLSBSZWNlaXZlcyB0aGUgY3VycmVudCBoZWFkZXIgYW5kIHNob3VsZCByZXR1cm4gb25lIG9mIHRoZSBhYm92ZSB2YWx1ZXMuXG4gIHxcbiAgKi9cbiAgaGVhZGVyczogdHJ1ZSxcblxuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBFeHBvc2UgSGVhZGVyc1xuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IEEgbGlzdCBvZiBoZWFkZXJzIHRvIGJlIGV4cG9zZWQgYnkgc2V0dGluZyBgQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNgLlxuICB8IGhlYWRlci4gQnkgZGVmYXVsdCBmb2xsb3dpbmcgNiBzaW1wbGUgcmVzcG9uc2UgaGVhZGVycyBhcmUgZXhwb3NlZC5cbiAgfFxuICB8IENhY2hlLUNvbnRyb2xcbiAgfCBDb250ZW50LUxhbmd1YWdlXG4gIHwgQ29udGVudC1UeXBlXG4gIHwgRXhwaXJlc1xuICB8IExhc3QtTW9kaWZpZWRcbiAgfCBQcmFnbWFcbiAgfFxuICB8IEluIG9yZGVyIHRvIGFkZCBtb3JlIGhlYWRlcnMsIHNpbXBseSBkZWZpbmUgdGhlbSBpbnNpZGUgdGhlIGZvbGxvd2luZyBhcnJheS5cbiAgfFxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc1xuICB8XG4gICovXG4gIGV4cG9zZUhlYWRlcnM6IFtcbiAgICAnY2FjaGUtY29udHJvbCcsXG4gICAgJ2NvbnRlbnQtbGFuZ3VhZ2UnLFxuICAgICdjb250ZW50LXR5cGUnLFxuICAgICdleHBpcmVzJyxcbiAgICAnbGFzdC1tb2RpZmllZCcsXG4gICAgJ3ByYWdtYSdcbiAgXSxcblxuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBDcmVkZW50aWFsc1xuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IFRvZ2dsZSBgQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHNgIGhlYWRlci4gSWYgdmFsdWUgaXMgc2V0IHRvIGB0cnVlYCxcbiAgfCB0aGVuIGhlYWRlciB3aWxsIGJlIHNldCwgb3RoZXJ3aXNlIG5vdC5cbiAgfFxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc1xuICB8XG4gICovXG4gIGNyZWRlbnRpYWxzOiB0cnVlLFxuXG4gIC8qXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8IE1heEFnZVxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IERlZmluZSBgQWNjZXNzLUNvbnRyb2wtTWF4LUFnZWAgaGVhZGVyIGluIHNlY29uZHMuXG4gIHwgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLU1heC1BZ2VcbiAgfFxuICAqL1xuICBtYXhBZ2U6IDkwXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvcnNDb25maWdcbiJdfQ==