"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class Post extends Orm_1.BaseModel {
    get date() {
        const fulldate = this.updatedAt;
        const day = fulldate.day;
        const month = fulldate.month;
        const year = fulldate.year;
        const date = `${day}/${month}/${year}`;
        return date;
    }
    get hour() {
        const fulldate = this.updatedAt;
        const hour = fulldate.hour;
        const minute = fulldate.minute;
        const fullhour = `${hour}:${minute}`;
        return fullhour;
    }
}
__decorate([
    Orm_1.column({ isPrimary: true }),
    __metadata("design:type", Number)
], Post.prototype, "id", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "name", void 0);
__decorate([
    Orm_1.computed(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], Post.prototype, "date", null);
__decorate([
    Orm_1.computed(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], Post.prototype, "hour", null);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "diagnostic", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "transference", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", typeof (_a = typeof Float32Array !== "undefined" && Float32Array) === "function" ? _a : Object)
], Post.prototype, "temperature", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Number)
], Post.prototype, "blood_oxygen", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Number)
], Post.prototype, "heart_rate", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Boolean)
], Post.prototype, "fever", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Boolean)
], Post.prototype, "headache", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Boolean)
], Post.prototype, "runny_nose", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Post.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_c = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _c : Object)
], Post.prototype, "updatedAt", void 0);
exports.default = Post;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9zdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWdDO0FBQ2hDLGdFQUFtRTtBQUduRSxNQUFxQixJQUFLLFNBQVEsZUFBUztJQWdCekMsSUFBVyxJQUFJO1FBQ2IsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQTtRQUMvQixNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFBO1FBQ3hCLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUE7UUFDNUIsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQTtRQUMxQixNQUFNLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFLENBQUE7UUFDdEMsT0FBTyxJQUFJLENBQUE7SUFDYixDQUFDO0lBR0QsSUFBVyxJQUFJO1FBQ2IsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQTtRQUMvQixNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFBO1FBQzFCLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUE7UUFDOUIsTUFBTSxRQUFRLEdBQUcsR0FBRyxJQUFJLElBQUksTUFBTSxFQUFFLENBQUE7UUFDcEMsT0FBTyxRQUFRLENBQUE7SUFDakIsQ0FBQztDQWlDRjtBQS9EQztJQURDLFlBQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7Z0NBQ1g7QUFHakI7SUFEQyxZQUFNLEVBQUU7O2tDQUNVO0FBV25CO0lBREMsY0FBUSxFQUFFOzs7Z0NBUVY7QUFHRDtJQURDLGNBQVEsRUFBRTs7O2dDQU9WO0FBR0Q7SUFEQyxZQUFNLEVBQUU7O3dDQUN5QztBQUdsRDtJQURDLFlBQU0sRUFBRTs7MENBQzhDO0FBR3ZEO0lBREMsWUFBTSxFQUFFO2tEQUNXLFlBQVksb0JBQVosWUFBWTt5Q0FBQTtBQUtoQztJQURDLFlBQU0sRUFBRTs7MENBQ2tCO0FBRzNCO0lBREMsWUFBTSxFQUFFOzt3Q0FDZ0I7QUFHekI7SUFEQyxZQUFNLEVBQUU7O21DQUNZO0FBR3JCO0lBREMsWUFBTSxFQUFFOztzQ0FDZTtBQUd4QjtJQURDLFlBQU0sRUFBRTs7d0NBQ2lCO0FBRzFCO0lBREMsWUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDcEIsZ0JBQVEsb0JBQVIsZ0JBQVE7dUNBQUE7QUFHMUI7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ3RDLGdCQUFRLG9CQUFSLGdCQUFRO3VDQUFBO0FBaEU1Qix1QkFpRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gJ2x1eG9uJ1xuaW1wb3J0IHsgQmFzZU1vZGVsLCBjb2x1bW4sIGNvbXB1dGVkIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvT3JtJ1xuaW1wb3J0IHsgc2x1Z2lmeSB9IGZyb20gJ0Bpb2M6QWRvbmlzL0FkZG9ucy9MdWNpZFNsdWdpZnknXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvc3QgZXh0ZW5kcyBCYXNlTW9kZWwge1xuICBAY29sdW1uKHsgaXNQcmltYXJ5OiB0cnVlIH0pXG4gIHB1YmxpYyBpZDogbnVtYmVyXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBuYW1lOiBzdHJpbmdcblxuICAvKiBAY29sdW1uKHsgaXNQcmltYXJ5OiB0cnVlIH0pXG4gIEBzbHVnaWZ5KHtcbiAgICBzdHJhdGVneTogJ3NpbXBsZScsXG4gICAgZmllbGRzOiBbJ25hbWUnXSxcbiAgICBhbGxvd1VwZGF0ZXM6IHRydWVcbiAgfSlcbiAgcHVibGljIHNsdWc6IHN0cmluZyAqL1xuXG4gIEBjb21wdXRlZCgpXG4gIHB1YmxpYyBnZXQgZGF0ZSgpIHtcbiAgICBjb25zdCBmdWxsZGF0ZSA9IHRoaXMudXBkYXRlZEF0XG4gICAgY29uc3QgZGF5ID0gZnVsbGRhdGUuZGF5XG4gICAgY29uc3QgbW9udGggPSBmdWxsZGF0ZS5tb250aFxuICAgIGNvbnN0IHllYXIgPSBmdWxsZGF0ZS55ZWFyXG4gICAgY29uc3QgZGF0ZSA9IGAke2RheX0vJHttb250aH0vJHt5ZWFyfWBcbiAgICByZXR1cm4gZGF0ZVxuICB9XG5cbiAgQGNvbXB1dGVkKClcbiAgcHVibGljIGdldCBob3VyKCkge1xuICAgIGNvbnN0IGZ1bGxkYXRlID0gdGhpcy51cGRhdGVkQXRcbiAgICBjb25zdCBob3VyID0gZnVsbGRhdGUuaG91clxuICAgIGNvbnN0IG1pbnV0ZSA9IGZ1bGxkYXRlLm1pbnV0ZVxuICAgIGNvbnN0IGZ1bGxob3VyID0gYCR7aG91cn06JHttaW51dGV9YFxuICAgIHJldHVybiBmdWxsaG91clxuICB9XG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBkaWFnbm9zdGljOiAnYXN5bm1wdG9tYXRpYycgfCAnc3ltcHRvbWF0aWMnXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyB0cmFuc2ZlcmVuY2U6ICdub3RfdHJhbmZlcmVkX3lldCcgfCAndHJhbnNmZXJlZCdcblxuICBAY29sdW1uKClcbiAgcHVibGljIHRlbXBlcmF0dXJlOiBGbG9hdDMyQXJyYXlcbiAgLyogQGNvbHVtbigpXG4gIHB1YmxpYyB0ZW1wZXJhdHVyZTogbnVtYmVyICovXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBibG9vZF9veHlnZW46IG51bWJlclxuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgaGVhcnRfcmF0ZTogbnVtYmVyXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBmZXZlcjogYm9vbGVhblxuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgaGVhZGFjaGU6IGJvb2xlYW5cblxuICBAY29sdW1uKClcbiAgcHVibGljIHJ1bm55X25vc2U6IGJvb2xlYW5cblxuICBAY29sdW1uLmRhdGVUaW1lKHsgYXV0b0NyZWF0ZTogdHJ1ZSB9KVxuICBwdWJsaWMgY3JlYXRlZEF0OiBEYXRlVGltZVxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lXG59XG4iXX0=